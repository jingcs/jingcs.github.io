<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>给Hexo安装主题模板并美化</title>
    <url>/2022/06/16/616-advance-ui/</url>
    <content><![CDATA[<h2 id="整体"><a href="#整体" class="headerlink" title="整体"></a>整体</h2><p>前提：已搭建好网页，想美化网站。</p>
<p>美化网站，可以从0开始写UI界面，静态网站也不复杂就是了。但这样比较慢，有很多已经写好的开源模板可以一件套用（类比当年QQ空间的脚本）<a href="https://hexo.voxel.site/">这个网站</a>列举了Hexo下Top10的热门开源模板。试了其中俩个。</p>
<p>Next：更简洁</p>
<p>Matery：挺花里胡哨的，功能丰富。整体画风更随意一些（？比如文档大小写混杂hhh 亮点是可以卡片式排版。</p>
<h2 id="主题安装步骤"><a href="#主题安装步骤" class="headerlink" title="主题安装步骤"></a>主题安装步骤</h2><p>安装主题很简单，就是把主题放进博客的theme文件夹，conf中改主题名，然后hexo更新页面即可。</p>
<p>下面步骤根据官方文档整理</p>
<ul>
<li><p>下载想要的主题</p>
<p>要先cd到对应hexo博客下，然后下载主题，喜欢哪个下哪个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#下载next</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line">#下载matery</span><br><span class="line">git clone https://github.com/blinkfox/hexo-theme-matery.git themes/hexo-theme-matery</span><br></pre></td></tr></table></figure>
</li>
<li><p>启用主题</p>
<p>博客根目录下的_config.yml文件，theme从默认的landscape改为主题名。如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">theme: next/hexo-theme-matery/其他安装的主题</span><br></pre></td></tr></table></figure>
</li>
<li><p>更新下看效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>

<p>没问题就同步到github即可</p>
</li>
</ul>
<p>其中，matery就一种样式，Next可以更改主题样式</p>
<p>在theme&#x2F;next&#x2F;下的config_yml中scheme，有Muse，Mist，Pisces，Gemini四种</p>
<p>改完之后同样更新看效果没问题就同步即可。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>安装教程</p>
<ul>
<li><p>next: <a href="https://theme-next.iissnan.com/getting-started.html">https://theme-next.iissnan.com/getting-started.html</a></p>
</li>
<li><p>Matery: <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>WebUI</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>Matery</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo报错YAMLException</title>
    <url>/2022/06/16/616-hexo-debug/</url>
    <content><![CDATA[<p>description: YAMLException can not read a block mapping entry; a multiline key may not be an implicit key</p>
<p>报错，hexo无法将md文档转网页</p>
<p>基本因为格式不对，空格少打了或者多大了。</p>
<p>比如categories:【-】后面有空格 不是直接 -hexo的</p>
<p>比如标题有特殊符号等等</p>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>Debug</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo日志使用方法</title>
    <url>/2022/06/16/616-hexo-usage-backup/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>前置：Hexo+GitHub，生成可访问的网站【见：<a href="http://localhost:4000/2022/06/16/hexo-gitpages-install/">搭建网站</a> 】。</p>
<p>本篇：如何发布新日志，总过程如下</p>
<ul>
<li><p>新建日志的路径</p>
<ul>
<li><p>直接在 路径<strong>hexo博客名&#x2F;source&#x2F;_posts</strong> 下手动新建xxx.md文件</p>
<p>自己写需要注意格式，否则可能会报错</p>
</li>
<li><p>使用命令行 <strong>cd 博客名</strong> ；然后<strong>hexo new post “xxxx日志名”</strong></p>
</li>
</ul>
<p>注：xxx最好是英文，后面也可以改</p>
</li>
<li><p>打开文件写日志</p>
<p>有关文章标题，发布时间，分类的设置，可见官方文档[1]。摘录如下</p>
<ul>
<li><p>tags, categories</p>
<p>分类categories具有顺序性和层次性，为文章添加多个分类。此时文章同时包括三个分类： <strong><code>PlayStation</code> 和 <code>Games</code></strong> 分别都是父分类 <code>Diary</code> 的子分类，同时 <strong><code>Life</code></strong> 是一个没有子分类的分类。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br></pre></td></tr></table></figure>

<p>标签tags没有顺序和层次。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tags:</span><br><span class="line">- PS3</span><br><span class="line">- Air</span><br><span class="line">- Trainline</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>将日志同步到Github上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>

<p>之后想修改日志也是改md然后用这命令传上去。</p>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li>Front-matter <a href="https://hexo.io/zh-cn/docs/front-matter">官方文档</a></li>
</ol>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GithubPages</tag>
      </tags>
  </entry>
  <entry>
    <title>整理，一步步的个人博客搭建及美化</title>
    <url>/2022/06/16/616-summary/</url>
    <content><![CDATA[<h2 id="整体"><a href="#整体" class="headerlink" title="整体"></a>整体</h2><ol>
<li><a href="http://jingcs.github.io/2022/06/16/hexo-gitpages-install/">搭建网站</a> 包括hexo+github建立可访问网站，域名修改，插入图片。</li>
<li><a href="http://jingcs.github.io/2022/06/16/616-hexo-usage-backup/">添加新日志</a> 包括如何在建立的网站上写日志，日志的分类标签规范</li>
<li><a href="http://jingcs.github.io/2022/06/16/616-advance-ui/">更改美化网站</a> 包括下载并安装更新不同的网页主题设计</li>
<li>扩展网页功能。</li>
</ol>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>Web</category>
        <category>Summary</category>
        <category>Doing</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>GithubPages</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义GithubPages域名+DNS解析加速</title>
    <url>/2022/07/11/git-new-domains/</url>
    <content><![CDATA[<h2 id="整体"><a href="#整体" class="headerlink" title="整体"></a>整体</h2><p>前置要求：已完成网页搭建。用户名.github.io能够访问网页。</p>
<p>步骤</p>
<ol>
<li>申请一个新域名网址</li>
<li>域名网站操作：更改域名的DNS解析器（Nameservers）到cloudflare</li>
<li>Cloudflare操作：设置，映射IP地址到GIthub（DNS解析）</li>
<li>GIthub操作：右上角setting-page-domain 更改为新域名网址。</li>
</ol>
<p>下面是一些自问自答，可以直接跳后面步骤。</p>
<ul>
<li><p><strong>什么是DNS解析？</strong></p>
</li>
<li><p>参考AWS：域名系统 (DNS) 将人类可读的域名 (例如，<a href="http://www.amazon.com/">www.amazon.com</a>) 转换为机器可读的 IP 地址 (例如，192.0.2.44)。更细节的之后单独写一篇【link】</p>
</li>
<li><p><strong>Cloudflare用来加速，为什么要加速？</strong></p>
</li>
<li><p>因为慢！（废话）一是github国内访问越来越慢，在墙的边缘游走。二是使用默认方式DNS解析很慢！作为急性子，等了半天网页还是404，以为是哪步搞错了，捣鼓了很久发现没错就是他慢而已……如果耐得住寂寞（其实第一次DNS解析挺快的，可能是想博好感；国内的也挺快的，但是要备案），可以将2，3步合为一步。在域名网站直接进行DNS解析（可以不用看这篇了！）</p>
</li>
</ul>
<h2 id="1-申请新域名"><a href="#1-申请新域名" class="headerlink" title="1 申请新域名"></a>1 申请新域名</h2><p>域名有收费的和免费的。选择困难可以看看：关于选域名【link】</p>
<p>收费的用过namesilo，网页非常复古域名解析也慢……不过价格算便宜的。一年3～9刀。</p>
<p>下面以免费域名freenom为例。免费域名有效期12～24个月，freenom快到期的时候可以再免费续，无限套娃hhh</p>
<p>为了后面解释方便，比如我选了abc.com</p>
<h2 id="2-更改域名的nameservers到cloudflare"><a href="#2-更改域名的nameservers到cloudflare" class="headerlink" title="2 更改域名的nameservers到cloudflare"></a>2 更改域名的nameservers到cloudflare</h2><p>将默认的nameserver改到cloudflare</p>
<p>原来的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ns1.dnsowl.com</span><br><span class="line">ns2.dnsowl.com</span><br><span class="line">ns3.dnsowl.com</span><br></pre></td></tr></table></figure>

<p>现在改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">guss.ns.cloudflare.com</span><br><span class="line">martha.ns.cloudflare.com</span><br></pre></td></tr></table></figure>

<p>如下所示</p>
<p><img src="/pics/nameserver.png" alt="img"></p>
<h2 id="3-Cloudflare的DNS解析"><a href="#3-Cloudflare的DNS解析" class="headerlink" title="3 Cloudflare的DNS解析"></a>3 Cloudflare的DNS解析</h2><p>创建cloudflare账号，add site，输入新域名的网址abc.com</p>
<p>dns配置成如下格式</p>
<table>
<thead>
<tr>
<th>Type</th>
<th>Name</th>
<th>Content</th>
</tr>
</thead>
<tbody><tr>
<td><strong>A</strong></td>
<td>abc.com</td>
<td>185.199.108.153</td>
</tr>
<tr>
<td><strong>A</strong></td>
<td>abc.com</td>
<td>185.199.109.153</td>
</tr>
<tr>
<td><strong>A</strong></td>
<td>abc.com</td>
<td>185.199.110.153</td>
</tr>
<tr>
<td><strong>A</strong></td>
<td>abc.com</td>
<td>185.199.111.153</td>
</tr>
<tr>
<td><strong>CNAME</strong></td>
<td>www</td>
<td>abc.com</td>
</tr>
</tbody></table>
<p>那四个IP地址是github服务器的IP（每个人都一样，不用改）。为什么？</p>
<p>命令行 ping 一下自己的网站就懂了</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ping</span> 用户名.github.io</span><br><span class="line">#显示<span class="number">64</span> bytes from <span class="number">185</span>.<span class="number">199</span>.<span class="number">111</span>.<span class="number">153</span>: icmp_seq=<span class="number">122</span> ttl=<span class="number">53</span> <span class="built_in">time</span>=<span class="number">11</span>.<span class="number">644</span> ms</span><br></pre></td></tr></table></figure>

<p>提一嘴，如果是买的服务器不是githubpages，写一个IP地址就行。为什么github是四个IP？可能github人家有钱（？笑。总之我ping了好几次，这几个IP都有出现。</p>
<h2 id="3-在Github上改域名"><a href="#3-在Github上改域名" class="headerlink" title="3 在Github上改域名"></a>3 在Github上改域名</h2><p>进入仓库，右上角【 …】-【settings】</p>
<p>【Code and automation】-【pages】</p>
<p>【Custom domain】改为新域名【<a href="http://www.abc.com】并保存/">www.abc.com】并保存</a></p>
<p>当状态从【DNS Check in Progress】到【DNS successful】就可以用新域名访问啦。</p>
<p>几个tips</p>
<ul>
<li>无法显示？清除所有缓存。拿手机访问试试</li>
<li>设置后github自动生成了CNAME文件保存着新域名。为了防止下次更新被覆盖掉。在本地也建一个相同文件（放在source目录下</li>
</ul>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>Web</category>
      </categories>
      <tags>
        <tag>GithubPages</tag>
        <tag>Cloudflare</tag>
        <tag>DNS</tag>
        <tag>Domain</tag>
        <tag>Freenom</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/06/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<p>这行用来mc更新后网页是否也会同步更新。</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Hexo中加入Github每日贡献图</title>
    <url>/2022/06/19/hexo-github-calendar/</url>
    <content><![CDATA[<h2 id="整体"><a href="#整体" class="headerlink" title="整体"></a>整体</h2><p>前置要求：已完成网页搭建。</p>
<p>效果：</p>
<p><img src="/pics/gitCal.png" alt="img"></p>
<p>推荐参考[1]，整理的很全面。</p>
<h2 id="GitHub-Calendar生成步骤"><a href="#GitHub-Calendar生成步骤" class="headerlink" title="GitHub Calendar生成步骤"></a>GitHub Calendar生成步骤</h2><p>最简单的方法是直接生成图片引用。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://ghchart.rshah.org/你的用户名&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;Github Chart&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<img src="https://ghchart.rshah.org/jingcs" alt="Github Chart" />

<p>不过为了之后倒腾，下面还用了GitHub Calendar</p>
<h3 id="（1）安装"><a href="#（1）安装" class="headerlink" title="（1）安装"></a>（1）安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-githubcalendar --save</span><br></pre></td></tr></table></figure>



<h3 id="（2）修改根目录下的配置文件"><a href="#（2）修改根目录下的配置文件" class="headerlink" title="（2）修改根目录下的配置文件"></a>（2）修改根目录下的配置文件</h3><p>​	把下面的加到_config.yml文件夹中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">githubcalendar:</span><br><span class="line">  enable: true</span><br><span class="line">  priority: 0</span><br><span class="line">  enable_page: /</span><br><span class="line">  user: 你的github用户名</span><br><span class="line">  layout:</span><br><span class="line">    type: class</span><br><span class="line">    name: main-inner</span><br><span class="line">    index: 0</span><br><span class="line">  githubcalendar_html: &#x27;&lt;div class=&quot;post-block animated fadeIn&quot; style=&quot;width:100%;height:auto;padding:40px 10px 10px 10px;&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;height:100%;display: flex;align-items: center;justify-content: center;&quot;&gt;&lt;svg style=&quot;height:50px&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;footer class=&quot;post-footer&quot;&gt;&lt;div class=&quot;post-eof&quot;&gt;&lt;/div&gt;&lt;/footer&gt;&#x27;</span><br><span class="line">  pc_minheight: 280px</span><br><span class="line">  mobile_minheight: 0px</span><br><span class="line">  #颜色可以自己换，这个是黑白</span><br><span class="line">  color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#d3d5d8&#x27;, &#x27;#bcbdc0&#x27;, &#x27;#a4a5a8&#x27;, &#x27;#8d8e90&#x27;, &#x27;#757678&#x27;, &#x27;#5e5e60&#x27;, &#x27;#464748&#x27;, &#x27;#2f2f30&#x27;, &#x27;#2f363d&#x27;, &#x27;#24292e&#x27;]&quot;</span><br><span class="line">  api: https://python-github-calendar-api.vercel.app/api</span><br><span class="line">  #在国内网速慢可以用gitee这个</span><br><span class="line">  #api: https://python-gitee-calendar-api.vercel.app/api</span><br><span class="line">  calendar_js: https://cdn.jsdelivr.net/gh/jingcs/jingcs.github.io/js/git-calendar-cn.js</span><br><span class="line">  plus_style: &quot;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="（3）运行"><a href="#（3）运行" class="headerlink" title="（3）运行"></a>（3）运行</h3><p>先本地运行看效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp; hexo g &amp; hexo s </span><br></pre></td></tr></table></figure>

<p>注意，三条命写一起有如果报错找不到json。分开运行就行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>没有变化清理一下缓存。</p>
<p>没问题的话就提交到github</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>



<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://blog.meta-code.top/2022/03/15/2022-41/">在主页展示GitHub&#x2F;Gitee贡献度日历</a> 推荐 整理的很全面，包含了第2个的网址</li>
<li><a href="https://gagalab.tech/2021/07/14/Next%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8Github%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86%E6%95%99%E7%A8%8B/">手把手教你在Hexo中使用Github贡献日历（以Next主题为例）</a></li>
<li><a href="https://www.freesion.com/article/7086773921/">贡献图，不是hexo的</a></li>
</ol>
<h2 id="进一步待填坑"><a href="#进一步待填坑" class="headerlink" title="进一步待填坑"></a>进一步待填坑</h2><ul>
<li>没有显示每天的commit次数(好像是网速问题)</li>
<li>js直接插到md里</li>
</ul>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>WebUI</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Javascript</tag>
        <tag>StatisticsDisplay</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo常用命令</title>
    <url>/2022/07/11/hexo-cmd/</url>
    <content><![CDATA[<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>所有命令都在博客文件夹下进行。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> 博客名</span><br></pre></td></tr></table></figure>



<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>写日志：source&#x2F;post下写md文档，写好后想提交</p>
<p>清除缓存</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>



<p>生成最新的generate</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>



<p>本地查看一下show</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>



<p>推送部署到云端deploy</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d </span><br></pre></td></tr></table></figure>



<p>如果想加上传描述</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d -m &#x27;这里写提交描述&#x27;</span><br></pre></td></tr></table></figure>



<h2 id="写法"><a href="#写法" class="headerlink" title="写法"></a>写法</h2><p>下面俩种写法等价</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo d -g </span><br><span class="line">hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>



<p>如果觉得前面命令麻烦，不想debug，可以直接</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo d -g <span class="comment">#先清除缓存，generate出新的文件，再deploy。</span></span><br></pre></td></tr></table></figure>



<p>同理其他命令也可以组合</p>
]]></content>
      <categories>
        <category>CMD</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Hexo+Next的进阶美化操作</title>
    <url>/2022/06/18/hexo-next-ada-toolkit/</url>
    <content><![CDATA[<h2 id="整体"><a href="#整体" class="headerlink" title="整体"></a>整体</h2><p>前提：已完成Hexo网页搭建，完成Next模板设置</p>
<p>参考官方文档，进一步设置<a href="https://hexo-next.readthedocs.io/zh_CN/latest/next/advanced/%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/">https://hexo-next.readthedocs.io/zh_CN/latest/next/advanced/%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/</a></p>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>WebUI</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>StatisticsDisplay</tag>
      </tags>
  </entry>
  <entry>
    <title>使用GitHubPages&amp;Hexo搭建个人网页</title>
    <url>/2022/06/16/hexo-gitpages-install/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>用Github做网页，就是把github当免费服务器，网页文件全存GitHub仓库上。但因为Github没有数据库，更适合做静态网页。（动态进阶pending。这里的hexo就是个网页模板。官方推荐的还有Jekyll（国内貌似比较慢）。理论上hexo做出来的东西可以放任何服务器上，Github最方便。</p>
<p>基本步骤就三步。</p>
<p>首先，用hexo创建网页模板。</p>
<p>然后，注册github建个仓库。</p>
<p>最后，将网页模板传到github仓库上。</p>
<p>就完成了。注意，Github网页无法做到实时更新，大概有三五分钟的延误。搞了一上午以为步骤不对网页怎么没变化，结果是我太心急……</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol>
<li><strong>本地创建好网页</strong></li>
</ol>
<p>安装hexo</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo npm install -g hexo-cli  </span><br></pre></td></tr></table></figure>

<p>用hexo建网页</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init xxx博客名（名字开心就好，不会显示在网页上）</span><br><span class="line">cd xxx博客名</span><br><span class="line">npm install </span><br><span class="line">npm install hexo-deployer-git --save #安装用于commit的程序</span><br><span class="line">npm i hexo-deployer-git #安装发布新文章</span><br></pre></td></tr></table></figure>

<p>至此，网页已经建好了，本地效果可以运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>



<ol start="2">
<li><strong>Github注册建仓库</strong></li>
</ol>
<p>注册就不说了，建仓库就是点绿色按钮Create a new repository</p>
<p>有俩点需要注意</p>
<ul>
<li><strong>Repository name必须是 你github用户名.</strong><a href="http://github.io/"><strong>github.io</strong></a></li>
<li><strong>设置默认分支名从main到master！！</strong><a href="https://github.com/settings/repositories"><strong>https://github.com/settings/repositories</strong></a></li>
</ul>
<p>第二点网上好多教程没提过。多摆俩句是因为master这词涉嫌歧视，在20年国外zzzq把默认的分支名从master换为main了。很多软件还是按照master写的。不改名可能会新建出一个master分支，每次提交push到master分支上，得合并。</p>
<p>SSH密钥授权待补</p>
<ol start="3">
<li><strong>将Hexo传到Github</strong></li>
</ol>
<p>有俩种方法，一种是命令行， 一种是github desktop </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#命令行，前提已经cd进hexo所在位置</span><br><span class="line">hexo clean  #保险起见清理缓存</span><br><span class="line">hexo d -g   </span><br></pre></td></tr></table></figure>

<p>打开浏览器 用户名.github.io就是网页</p>
<p>也可以d上传前先debug一下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>



<h2 id="进一步待填坑"><a href="#进一步待填坑" class="headerlink" title="进一步待填坑"></a>进一步待填坑</h2><ol start="4">
<li><p>更改域名</p>
<p>github上：settings- pages- custom domain 输入买好的，想要自定义的域名</p>
<p>域名上：将github用户名.github.io加入到chame</p>
<p>网页文件：新建CHAME文件，无后缀，在里面写上想自定义的域名</p>
<p>重新提交</p>
<p>注意最多可能会要48小时才能更新！（一般十来分钟</p>
</li>
</ol>
<p>[ ] 发布文章后主页不更新</p>
<p>[ ] 插入图片</p>
<p>source目录下新建images文件夹专门存储图片，图片引用方式为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![img](/images/xxx.png)</span><br></pre></td></tr></table></figure>



<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>创建过程都很详细，黑字是备注的每个教程的不同侧重点</p>
<ol>
<li><p><a href="https://godweiyang.com/2018/04/13/hexo-blog/">超详细Hexo+Github博客搭建小白教程</a> 强烈安利这篇，非常详细，还开源了代码。水印，挂件，统计工具，BGM，评论，特效，答疑等等</p>
</li>
<li><p><a href="https://segmentfault.com/a/1190000017986794">超详细Hexo+Github Page搭建技术博客教程【持续更新】</a> 额外功能，域名，SOE搜索优化，其他插件程序等</p>
</li>
<li><p><a href="https://learnku.com/articles/45697#replies">超详细 Hexo + GitHub Page 搭建技术 blog 教程</a> 还有Hexo常用命令，模板推荐</p>
</li>
</ol>
]]></content>
      <categories>
        <category>TechNotes</category>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GithubPages</tag>
      </tags>
  </entry>
</search>
